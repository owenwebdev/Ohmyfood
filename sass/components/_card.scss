// @use "sass:list";
@use "sass:map";

@use "../abstracts/variables";
@use "../abstracts/colors";
@use "../abstracts/mixins";
@use "../base/typography";

@function restaurant-photo-url($filename) {
  @return variables.$restaurant-photos-directory + "/" + $filename;
}

@mixin generate-card($index, $restaurant) {
//   $restaurant: list.nth(variables.$restaurants, $index);

  .card#{$index} {
    display: grid;
    height: 14rem;
    margin: 1.25rem 0;
    grid-template-areas:
      "photo photo"
      "title fav"
      "info fav";
    grid-template-columns: 1fr 3rem;
    grid-template-rows: minmax(0, 1fr) 2rem 2.5rem;
    overflow: hidden;
    position: relative;
    background: colors.$background1;
    @include mixins.rounded-corners;
    @include mixins.shadow;

    &__photo {
      grid-area: photo;
      $photo-filename: map.get($restaurant, "photo");
      $photo-url: restaurant-photo-url($photo-filename);
      background-image: url($photo-url);
      background-color: colors.$background3;
      background-size: cover;
    }

    &__title {
      grid-area: title;
      padding: 0rem 0.5rem 0rem 0.5rem;
      align-self: end;
      &::before {
        content: map.get($restaurant, "title");
      }
    }

    &__info {
      grid-area: info;
      padding: 0.3rem 0.5rem 0 0.5rem;
      &::before {
        content: map.get($restaurant, "info");
      }
    }

    &__favourite {
      grid-area: fav;
      align-self: center;
      justify-self: center;
      &::before {
        @include typography.heart-unfilled
      }
    }

    &__label {
      $label: map.get($restaurant, "label");
      @if $label {
        display: inline-block;
        position: absolute;
        right: 1rem;
        top: 1rem;
        padding: 0.5rem 1.5rem;
        background: colors.$tertiary;
        &::before {
          content: $label;
        }
      }
    }
  }
}
